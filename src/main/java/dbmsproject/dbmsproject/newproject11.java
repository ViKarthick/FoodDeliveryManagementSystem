package dbmsproject.dbmsproject;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

public class newproject11 extends javax.swing.JFrame {
    private Connection con;

    public newproject11() throws SQLException, ClassNotFoundException {
        initComponents();
        connectToDatabase(); // Establishing the database connection
    }
    
    private void connectToDatabase() {
        try {
            Class.forName("oracle.jdbc.OracleDriver");
            con = DriverManager.getConnection(
                    "jdbc:oracle:thin:@LAPTOP-9M301MNP:1522:orcl",
                    "scott",
                    "boomthakkali"
            );
        } catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showMessageDialog(this, "Failed to connect to database: " + ex.getMessage());
            ex.printStackTrace();
            System.exit(1);
        }
    }
    // Method to initialize components (generated by NetBeans GUI builder)
    private void initComponents() {
        rest_id = new javax.swing.JLabel();
        rest_id_enter = new javax.swing.JTextField();
        rest_password = new javax.swing.JLabel();
        rest_password_enter = new javax.swing.JPasswordField();
        rest_login = new javax.swing.JButton();
        rest_register = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        rest_id.setText("Restaurant ID");

        rest_password.setText("Password");

        rest_login.setText("LOGIN");
        rest_login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rest_loginActionPerformed(evt);
            }
        });

        rest_register.setText("REGISTER");
        rest_register.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rest_registerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(263, 263, 263)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(rest_password)
                    .addComponent(rest_id, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rest_password_enter, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rest_id_enter, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(274, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(223, Short.MAX_VALUE)
                .addComponent(rest_login, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addComponent(rest_register, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(222, 222, 222))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rest_id, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rest_id_enter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rest_password_enter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rest_password, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rest_login, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rest_register, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(68, Short.MAX_VALUE))
        );

        pack();
    }

    // Method to handle login button action
    private void rest_loginActionPerformed(java.awt.event.ActionEvent evt) {
    PreparedStatement ps = null;
    ResultSet rs = null;

    try {
        String enteredId = rest_id_enter.getText().trim(); // Trim to remove any leading/trailing spaces
        String enteredPassword = new String(rest_password_enter.getPassword()); // Directly get password as string

        System.out.println("Executing query: SELECT * FROM RESTAURANT WHERE restaurant_id = ? AND password_rest = ?");
        System.out.println("Entered ID: " + enteredId);
        System.out.println("Entered Password: " + enteredPassword);

        String query = "SELECT * FROM RESTAURANT WHERE restaurant_id = ? AND password_rest = ?";
        ps = con.prepareStatement(query);
        ps.setString(1, enteredId);
        ps.setString(2, enteredPassword);

        rs = ps.executeQuery();

        if (rs.next()) {
            // Successful login
            System.out.println("Login successful!");
            new RestaurantScreen(enteredId).setVisible(true);
            this.dispose();
        } else {
            // Invalid credentials
            JOptionPane.showMessageDialog(this, "Invalid ID or Password.");
            System.out.println("Invalid ID or Password.");
        }
    } catch (SQLException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
    } finally {
        try {
            if (rs != null) rs.close();
            if (ps != null) ps.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}


    // Method to handle register button action
    private void rest_registerActionPerformed(java.awt.event.ActionEvent evt) {
        new RestaurantRegistrationFrame().setVisible(true);
        this.dispose();
    }

    // Main method to start the application
    public static void main() {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new newproject11().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(newproject11.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(newproject11.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // UI components declaration
    private javax.swing.JLabel rest_id;
    private javax.swing.JTextField rest_id_enter;
    private javax.swing.JButton rest_login;
    private javax.swing.JLabel rest_password;
    private javax.swing.JPasswordField rest_password_enter;
    private javax.swing.JButton rest_register;
}
